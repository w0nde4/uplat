using System.Collections;
using UnityEngine;

[CreateAssetMenu(fileName = "InvulnerabilityOnDash", menuName = "Damage Interceptors/Invulnerability On Dash")]
public class InvulnerabilityOnDash : BaseDamageInterceptor
{
    [SerializeField] private DashSettings settings;
    [SerializeField] private float additionalDuration = 0.2f;

    private bool isInvulnerable;

    private void OnEnable()
    {
        PlayerEvent.OnDashChanged += ActivateInvulnerability;
    }

    private void OnDisable()
    {
        PlayerEvent.OnDashChanged -= ActivateInvulnerability;
    }

    public void ActivateInvulnerability(bool isDashing)
    {
        if (isDashing)
        {
            if (user.TryGetComponent(out MonoBehaviour coroutineRunner))
            {
                if (activeCoroutine != null)
                    coroutineRunner.StopCoroutine(activeCoroutine);

                activeCoroutine = coroutineRunner.StartCoroutine(InvulnerabilityCoroutine());
            }
        }
    }

    private IEnumerator InvulnerabilityCoroutine()
    {
        isInvulnerable = true;

        var duration = additionalDuration + settings.Duration;
        yield return new WaitForSeconds(duration);

        isInvulnerable = false;
    }

    public override bool CanApplyDamage(GameObject damager)
    {
        return !isInvulnerable;
    }

    public override int ModifyDamage(int damage, GameObject damagable) => damage;
}
