using System.Collections;
using UnityEngine;

[CreateAssetMenu(fileName = "InvulnerabilityOnHit", menuName = "Damage Interceptors/Invulnerability On Hit")]
public class InvulnerabilityOnHit : BaseDamageInterceptor
{
    [SerializeField] private float duration = 0.5f;

    private bool isInvulnerable = false;
    private DamageHandler damageHandler;

    private void OnEnable()
    {
        if (damageHandler != null)
        {
            damageHandler.OnDamageRecieved += ActivateInvulnerability;
        }
    }

    private void OnDisable()
    {
        if (damageHandler != null)
        {
            damageHandler.OnDamageRecieved -= ActivateInvulnerability;
        }
    }

    public void ActivateInvulnerability(GameObject user)
    {
        if(user.TryGetComponent(out MonoBehaviour coroutineRunner))
        {
            if (activeCoroutine != null)
                coroutineRunner.StopCoroutine(activeCoroutine);

            activeCoroutine = coroutineRunner.StartCoroutine(InvulnerabilityCoroutine());
        }
    }

    private IEnumerator InvulnerabilityCoroutine()
    {
        isInvulnerable = true;
        yield return new WaitForSeconds(duration);
        isInvulnerable = false;
    }

    public override bool CanApplyDamage(GameObject gameObject)
    {
        return !isInvulnerable;
    }

    public override int ModifyDamage(int damage, GameObject damagable) => damage;
}
